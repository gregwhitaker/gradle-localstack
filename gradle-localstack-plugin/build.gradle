plugins {
    id "idea"
    id "groovy"
    id "java-gradle-plugin"
    id "maven-publish"
    id "com.gradle.plugin-publish"      version "1.3.1"
    id "org.unbroken-dome.test-sets"    version "4.0.0"
    id "com.adarshr.test-logger"        version "2.1.0"
}

// Project Configuration
project.group           = "com.nike.pdm.localstack"
project.version         = "4.0.0"
project.description     = "Gradle plugin for interacting with mock AWS endpoints using LocalStack"

project.ext.name        = "gradle-localstack-plugin"

// Dependency Configuration
project.ext.composePluginVersion = "0.17.12"
sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    gradleApi()

    implementation platform("com.amazonaws:aws-java-sdk-bom:1.12.221")

    implementation "com.avast.gradle:gradle-docker-compose-plugin:${composePluginVersion}"
    implementation "org.springframework.boot:spring-boot-gradle-plugin:2.7.6";
    implementation "org.springframework.boot:spring-boot-loader-tools:2.7.6"


    implementation "com.amazonaws:aws-java-sdk-cloudformation"
    implementation "com.amazonaws:aws-java-sdk-dynamodb"
    implementation "com.amazonaws:aws-java-sdk-sqs"
    implementation "com.amazonaws:aws-java-sdk-sns"
    implementation "com.amazonaws:aws-java-sdk-s3"
    implementation "commons-io:commons-io:2.7"
    implementation "de.vandermeer:asciitable:0.3.2"

    testImplementation gradleTestKit()
    testImplementation("org.spockframework:spock-core:2.0-groovy-3.0") {
        exclude module: "groovy-all"
    }
    testImplementation "org.spockframework:spock-junit4:2.0-M3-groovy-3.0"
    testImplementation "com.github.docker-java:docker-java:3.2.5"
    testImplementation "com.github.docker-java:docker-java-transport-httpclient5:3.2.5"
    testImplementation "com.github.stefanbirkner:system-rules:1.19.0"
    testImplementation "com.sun.istack:istack-commons-runtime:3.0.11"
    testImplementation "org.yaml:snakeyaml:1.28"
}

// Test Configuration
testSets {
    funcTest
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()
}

// Publishing Configuration
publishing {
    repositories {
        maven {
            name = "helixframework-internal"
            url = uri("https://maven.pkg.github.com/helixframework/helix-internal")

            credentials {
                username = "${gprUser}" ?: System.getenv("USERNAME")
                password = "${gprKey}" ?: System.getenv("GITHUB_TOKEN")
            }
        }
    }
}

gradlePlugin {
    testSourceSets sourceSets.funcTest

    plugins {
        localstackPlugin {
            id = "com.nike.pdm.localstack"
            displayName = project.ext.name
            description = project.description
            implementationClass = "com.nike.pdm.localstack.LocalStackPlugin"
        }
    }
}

java {
    withJavadocJar()
    withSourcesJar()
}

tasks.withType(Copy).all {
    duplicatesStrategy 'exclude'
}
